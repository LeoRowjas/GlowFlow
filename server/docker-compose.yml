version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=GlowFlowDB;Username=postgres;Password=postgres;TrustServerCertificate=True;
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minioadmin
      - Minio__SecretKey=minioadmin
    depends_on:
      - db
      - minio
      - minio-init

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: GlowFlowDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./init-data/images:/images  # Монтируем папку с изображениями
    entrypoint: >
      /bin/sh -c "
        # Ждем, пока MinIO запустится
        sleep 5

        # Настраиваем подключение
        mc alias set myminio http://minio:9000 minioadmin minioadmin

        # Создаем бакеты и делаем их публичными
        mc mb --ignore-existing myminio/articles
        mc mb --ignore-existing myminio/products
        mc mb --ignore-existing myminio/avatars
        mc anonymous set download myminio/articles
        mc anonymous set download myminio/products
        mc anonymous set download myminio/avatars

        # Копируем все файлы изображений сразу
        mc cp /images/ar-*.jpg myminio/articles/ || true
        mc cp /images/pr-*.jpg myminio/products/ || true
      "

volumes:
  pgdata:
  minio-data: